% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/recode.R
\name{recode.multiple.remove.choices}
\alias{recode.multiple.remove.choices}
\title{Recode select_multiple responses: remove particular choices.}
\usage{
recode.multiple.remove.choices(
  data,
  variable,
  choices,
  issue,
  other_var_name = NULL,
  CL_COLS = c("uuid", "uniqui", "loop_index", "variable", "old.value", "new.value",
    "issue")
)
}
\arguments{
\item{data}{Dataframe containing records which will be affected.}

\item{variable}{variable String containing the name of the select_multiple variable.}

\item{choices}{choices Vector of strings (or a single string) containing the choices that will be removed. They must be valid options for this variable.}

\item{issue}{issue String with explanation used for the cleaning log entry.}

\item{other_var_name}{the name of your _other variable - variable containing string responses, NULL by default}

\item{CL_COLS}{string of columns of the cleaning log defauls to c("uuid","uniqui", "loop_index", "variable", "old.value", "new.value", "issue")}
}
\value{
Dataframe containing cleaning log entries constructed from `data`
}
\description{
Removes the relevant text from the cummulative column. Changes all 1s to 0 in choice columns specified by `choices`.
Also, if one of the `choices` is "other", then the text variable (_other) will be changed to NA.
}
\note{
This function does not affect entries that have NA in `variable`.
}
\examples{
\dontrun{
recode.multiple.remove.choices(data = filter(raw.main, condition), variable = "question_name",
choices = c("option1", "option2"), issue = "explanation")
}
}
