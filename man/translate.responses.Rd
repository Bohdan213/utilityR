% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/translate.R
\name{translate.responses}
\alias{translate.responses}
\title{Translate a vector from a given dataframe.}
\usage{
translate.responses(
  responses,
  values_from = "response.uk",
  directory,
  source_lang = NULL,
  target_lang = "en",
  api.key = NULL
)
}
\arguments{
\item{responses}{Dataframe containing a column which shall be translated.}

\item{values_from}{Name of the column from `responses` which shall be translated.}

\item{directory}{The directory where the 'translate_info.csv' will be written}

\item{source_lang}{String containing a two-letter language code. The input vector will be translated from this language. Defaults to NULL - autodetect language.}

\item{target_lang}{A two-letter language code. Input vector will be translated into this language. Defaults to 'en' - translation to English}

\item{api.key}{Your API key. Usually we store ours in "resources/microsoft.api.key_regional.R", copy it from there and insert.}
}
\value{
The same dataframe as `responses`, but with a new column, containing the translation.
The column will be named according to the target language. By default, the output will be stored in column named 'response.en'
}
\description{
The provided dataframe `responses` must contain the column `values_from` which will be used as input vector for the translation.
Also outputs informative logs to file named "translate_info.csv". You may specify the target language using `target_lang` parameter
(or keep it NULL - by default it will be autodected)
}
\examples{
\dontrun{
translate.responses(responses = data_responses, values_from = "response.uk",directory = 'outputs/requests')
}
}
